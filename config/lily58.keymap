/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&lt {
	quick-tap-ms = <300>;
};

/ {

	behaviors {
		sp: space_modtap {
			compatible = "zmk,behavior-hold-tap";
			label = "SPACE_MODTAP";
			#binding-cells = <2>;
			tapping-term-ms = <400>;
			quick_tap_ms = <0>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

		/*
		 * This inputs a poop emoji using IBus on Linux
		 * To do this on Windows you'd need WinCompose
		 * On MacOS you can use Unicode Hex Input
		 */
		poop: poop {
			compatible = "zmk,behavior-macro";
			label = "IBUS_POO";
			#binding-cells = <0>;
			bindings = <&kp LC(LS(U))>, <&kp N1>, <&kp F>, <&kp N4>, <&kp A>, <&kp N9>, <&kp SPACE>;
    	};
    };

	combos {
		compatible = "zmk,combos";
		combo_esc {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};
		combo_thumbs {
			timeout-ms = <50>;
			key-positions = <54 55>;
			bindings = <&kp LG(D)>;
		};
		combo_colemak {
        	timeout-ms = <50>;
        	key-positions = <51 58>;
        	bindings = <&tog 1>;
        };
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp EQUAL       &kp N1            &kp N2              &kp N3             &kp N4          &kp N5                                &kp N6          &kp N7          &kp N8        &kp N9          &kp N0          &kp MINUS
&kp ESC         &kp Q             &kp W               &kp E              &kp R           &kp T                                 &kp Y           &kp U           &kp I         &kp O           &kp P           &kp BSLH
&kp LSHFT       &hm LGUI A        &hm LALT S          &hm LCTRL D        &hm LSHFT F     &kp G                                 &kp H           &hm RSHFT J     &hm RCTRL K   &hm LALT L      &lt 3 SEMI      &mt RSHFT SQT
&lt 2 GRAVE     &kp Z             &kp X               &kp C              &kp V           &kp B   &kp LGUI       &kp F24        &kp N           &kp M           &kp COMMA     &kp DOT         &kp FSLH        &kp RCTRL
                                          &kp LALT           &lt 2 LGUI     &sp LCTRL SPACE      &lt 2 BSPC     &mt RSHFT TAB         &kp RET        &kp RALT       &kp RG(RSHFT)
			>;
		};

		colemak_layer {
			bindings = <
&trans          &trans           &trans               &trans             &trans          &trans                                &trans          &trans          &trans        &trans          &trans          &trans
&trans          &kp Q             &kp W               &kp F              &kp P           &kp B                                 &kp J           &kp L           &kp U         &kp Y           &kp SEMI        &trans
&trans          &hm LGUI A        &hm LALT R          &hm LCTRL S        &hm LSHFT T     &kp G                                 &kp M           &hm RSHFT J     &hm RCTRL E   &hm LALT I      &lt 2 O         &trans
&trans          &kp Z             &kp X               &kp C              &kp D           &kp V   &trans         &trans         &kp K           &kp H           &kp COMMA     &kp DOT         &trans          &trans
                                            &trans               &trans         &trans           &trans         &trans               &trans           &trans         &trans
			>;
		};

		lower_layer {
			bindings = <
&bt BT_CLR      &bt BT_SEL 0      &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3   &bt BT_SEL 4                          &none           &none            &none         &none          &none           &kp EQUAL
&none           &none             &kp N7              &kp N8              &kp N9         &none                                 &none           &kp LPAR         &kp RPAR      &kp LT         &kp GT          &kp PIPE
&kp GRAVE       &none             &kp N4              &kp N5              &kp N6         &none                                 &none           &kp LBRC         &kp RBRC      &kp LBKT       &kp RBKT        &kp TILDE
&kp TILDE       &none             &kp N1              &kp N2              &kp N3         &none        &trans     &trans        &none           &kp MINUS        &kp KP_PLUS   &kp LBRC       &kp RBRC        &kp PIPE
                                               &trans            &kp N0            &trans             &trans     &kp RG(D)            &poop             &tog 3          &trans
			>;
		};

		raise_layer {
			bindings = <
&kp F1           &kp F2            &kp F3               &kp F4             &kp F5          &kp F6                              &kp F7          &kp F8           &kp F9        &kp F10        &kp F11         &kp F12
&kp GRAVE        &none             &kp AMPERSAND        &kp ASTERISK       &kp LPAR        &none                               &none           &none            &none         &none          &none           &none
&none            &none             &kp DOLLAR           &kp PERCENT        &kp CARET       &none                               &kp LEFT        &kp DOWN         &kp UP        &kp RIGHT      &none           &none
&none            &none             &kp EXCL             &kp AT             &kp HASH        &none    &trans        &trans       &kp KP_PLUS     &kp MINUS        &kp EQUAL     &kp LBKT       &kp RBKT        &kp BSLH
                                             &trans               &trans          &trans            &kp LG(D)     &trans                &trans          &trans          &trans
			>;
		};

	};
};
